-- enml_domain = "orebro";
-- enml_domain = "freiburg";
enml_domain = "cobot";

RobotConfig = {
  name = "cobot4";
};

NonMarkovLocalization = {
  map_name = "LGRC3";
  starting_location = vec2(47.016267, 30.034157);
  starting_angle = deg2rad(180.0);

  -- CoBot Sensor parameters.
  laser_std_dev = 0.05;
  min_point_cloud_range = 0.02;
  max_point_cloud_range = 3.9;
  max_normal_point_distance = 0.1;
  robot_laser_offset = vec2(0.15, 0.0);
  num_skip_readings = 1;

  -- Odometry parameters.
  -- CoBot parameters.
  min_rotation = deg2rad(5);
  min_translation = 0.3;
  max_odometry_delta_loc = 0.2;
  max_odometry_delta_angle = deg2rad(15.0);
  odometry_rotation_scale = 1.0;
  odometry_translation_scale = 1.0;

  -- Parameters for Odometry constraints.
  max_update_period = 0.5;
  odometry_radial_stddev_rate = 0.1;
  odometry_tangential_stddev_rate = 0.1;
  odometry_angular_stddev_rate = 0.1;
  odometry_translation_min_stddev = 0.001;
  odometry_translation_max_stddev = 10.5;
  odometry_rotation_min_stddev = deg2rad(1.0);
  odometry_rotation_max_stddev = deg2rad(1500.0);
  radial_translation_uncertainty = 0.01;
  tangential_translation_uncertainty = 0.01;
  angle_uncertainty = 0.05;

  -- Parameters for LTF constraints.
  map_huber_loss = 0.1;
  max_point_to_line_distance = 0.25;
  max_angle_error = deg2rad(35.0);
  map_correlation_factor = 1.0 / 50.0;

  -- Parameters for STF constraints.
  point_match_threshold = 0.15;
  max_stf_angle_error = deg2rad(25.0);
  max_correspondences_per_point = 6;
  point_correlation_factor = 1.0 / 40.0;

  -- Parameters for Object constraints.
  use_object_constraints = false;
  object_correlation_factor = 1.0 / 10.0;
  object_match_threshold = 0.2;
  min_object_overlap = 300;

  -- Parameters for visibility constraints.
  use_visibility_constraints = true;
  visibility_correlation_factor = 0.02;

  -- Parameters for episode segmentation.
  min_ltf_ratio = 0.9;
  min_episode_length = 10;

  -- MLE Optimization parameters.
  pose_increment = 1;
  max_history = 80;
  max_solver_iterations = 30;
  num_repeat_iterations = 1;
  max_repeat_iterations = 4;
  return_jacobian = false;
  num_threads = 8;
};

if RobotConfig.name=="Cobot-Sim" then
  NonMarkovLocalization.min_episode_length = 10;
end

if RobotConfig.name=="Cobot1" then
  NonMarkovLocalization.odometry_translation_scale = 1.02;
end

if RobotConfig.name=="Cobot3" then
  NonMarkovLocalization.min_rotation = deg2rad(5);
  NonMarkovLocalization.min_translation = 0.1;

  -- Sensor parameters.
  NonMarkovLocalization.robot_laser_offset = vec2(0.14, 0.0);
  NonMarkovLocalization.laser_std_dev = 0.05;
  NonMarkovLocalization.min_point_cloud_range = 0.02;
  NonMarkovLocalization.max_point_cloud_range = 4.0;
  NonMarkovLocalization.max_normal_point_distance = 0.15;

  -- Parameters for LTF constraints.
  NonMarkovLocalization.max_point_to_line_distance = 0.15;
  NonMarkovLocalization.max_angle_error = deg2rad(35.0);
  NonMarkovLocalization.map_correlation_factor = 1.0 / 30.0;

  -- Parameters for STF constraints.
  NonMarkovLocalization.point_match_threshold = 0.15;
  NonMarkovLocalization.point_correlation_factor = 1.0 / 20.0;

  NonMarkovLocalization.visibility_correlation_factor = 0.01;

  -- Odometry constraints.
  NonMarkovLocalization.max_update_period = 1.0;

  -- MLE Optimization parameters.
  NonMarkovLocalization.min_episode_length = 20;
  NonMarkovLocalization.pose_increment = 1;
  NonMarkovLocalization.max_history = 80;
  NonMarkovLocalization.max_solver_iterations = 30;
  NonMarkovLocalization.num_repeat_iterations = 1;
  NonMarkovLocalization.max_repeat_iterations = 4;
  NonMarkovLocalization.num_threads = 4;
end

if RobotConfig.name=="Cobot4" then
  NonMarkovLocalization.min_rotation = deg2rad(20);
  NonMarkovLocalization.min_translation = 0.1;

  -- Sensor parameters.
  NonMarkovLocalization.robot_laser_offset = vec2(0.165, 0.0);
  NonMarkovLocalization.laser_std_dev = 0.10;
  NonMarkovLocalization.min_point_cloud_range = 0.02;
  NonMarkovLocalization.max_point_cloud_range = 12.0;
  NonMarkovLocalization.max_normal_point_distance = 0.15;

  -- Parameters for LTF constraints.
  NonMarkovLocalization.max_point_to_line_distance = 0.35;
  NonMarkovLocalization.max_angle_error = deg2rad(35.0);
  NonMarkovLocalization.map_correlation_factor = 1.0 / 30.0;

  -- Parameters for STF constraints.
  NonMarkovLocalization.point_match_threshold = 0.15;
  NonMarkovLocalization.point_correlation_factor = 1.0 / 20.0;

  NonMarkovLocalization.visibility_correlation_factor = 0.01;

  -- Odometry constraints.
  NonMarkovLocalization.max_update_period = 1.0;

  -- MLE Optimization parameters.
  NonMarkovLocalization.min_episode_length = 20;
  NonMarkovLocalization.pose_increment = 1;
  NonMarkovLocalization.max_history = 75;
  NonMarkovLocalization.max_solver_iterations = 10;
  NonMarkovLocalization.num_repeat_iterations = 1;
  NonMarkovLocalization.max_repeat_iterations = 4;
  NonMarkovLocalization.num_threads = 4;
end

-- Parameters for probabilistic object maps.
ProbabilisticObjectMaps = {
  object_distance_threshold = 0.03;
  min_object_points = 600;
  laser_angular_resolution = deg2rad(360.0 / 1024.0);
  laser_std_dev = 0.05;
  image_resolution = 0.02;
  image_border = 15.0 * 0.02;
  min_sdf_value = -10.0 * 0.02;
  max_sdf_value = 10.0 * 0.02;
  min_sdf_weight = 0.2;
  max_sdf_weight = 0.7;
  min_sdf_inference_weight = 0.4;
  generate_sdf = false;
  sdf_mistrust_weight = 1.0;
  matching_angular_resolution = deg2rad(3.0);
  matching_delta_loc = 0.24;
  matching_loc_resolution = 0.06;
  max_clique_kld_value = 5.0;
  min_clique_overlap_value = 0.80;
  max_num_objects = 60;
  epsilon_occupancy = 0.01;
  occupancy_threshold = 0.3;
  good_match_threshold = 0.7;
};

if enml_domain == "freiburg" then
  -- Univ. Freiburg parameters.

  -- datasets/freiburg_parkinglot/logs/*.bag
  NonMarkovLocalization.starting_location = vec2(0.0, 0.0);
  NonMarkovLocalization.starting_angle = deg2rad(0.0);
  NonMarkovLocalization.map_name = "freiburg_parkinglot";

  -- Freiburg Sensor parameters.
  NonMarkovLocalization.laser_std_dev = 0.1;
  NonMarkovLocalization.min_point_cloud_range = 0.1;
  NonMarkovLocalization.max_point_cloud_range = 70.0;
  NonMarkovLocalization.max_normal_point_distance = 0.5;
  NonMarkovLocalization.robot_laser_offset = vec2(0.0, 0.0);


  -- Parameters for LTF constraints.
  NonMarkovLocalization.map_huber_loss = 0.1;
  NonMarkovLocalization.max_point_to_line_distance = 0.5;
  NonMarkovLocalization.max_angle_error = deg2rad(89.0);
  NonMarkovLocalization.map_correlation_factor = 1; -- 1.0 / 50.0;

  -- Parameters for STF constraints.
  NonMarkovLocalization.point_match_threshold = 0.25;
  NonMarkovLocalization.max_stf_angle_error = deg2rad(89.0);
  NonMarkovLocalization.max_correspondences_per_point = 10;
  NonMarkovLocalization.point_correlation_factor = 1; -- 1.0 / 50.0;

  -- Parameters for Odometry constraints.
  NonMarkovLocalization.odometry_radial_stddev_rate = 0.2; -- 10.0;
  NonMarkovLocalization.odometry_tangential_stddev_rate = 0.2; -- 3.0;
  NonMarkovLocalization.odometry_angular_stddev_rate = 0.2; -- 30.0;
  NonMarkovLocalization.odometry_translation_min_stddev = 0.01;
  NonMarkovLocalization.odometry_translation_max_stddev = 1000000.5;
  NonMarkovLocalization.odometry_rotation_min_stddev = deg2rad(1000.0);
  NonMarkovLocalization.odometry_rotation_max_stddev = deg2rad(50000000.0);

  -- Odometry parameters.
  NonMarkovLocalization.min_rotation = deg2rad(10.5);
  NonMarkovLocalization.min_translation = 0.5;

  NonMarkovLocalization.use_visibility_constraints = false;

  -- Parameters for episode segmentation.
  NonMarkovLocalization.min_ltf_ratio = 0.7;
  NonMarkovLocalization.min_episode_length = 20;

  -- Parameters for object clustering.
  NonMarkovLocalization.object_distance_threshold = 0.2;
  NonMarkovLocalization.min_object_points = 500;

  -- MLE Optimization parameters.
  NonMarkovLocalization.pose_increment = 1;
  NonMarkovLocalization.max_history = 80;
  NonMarkovLocalization.max_solver_iterations = 50;
  NonMarkovLocalization.num_repeat_iterations = 4;
  NonMarkovLocalization.max_repeat_iterations = 6;

  ProbabilisticObjectMaps.object_distance_threshold = 0.1;
  ProbabilisticObjectMaps.min_object_points = 600;
  ProbabilisticObjectMaps.laser_angular_resolution = deg2rad(1.0);
  ProbabilisticObjectMaps.laser_std_dev = 0.1;
  ProbabilisticObjectMaps.image_resolution = 0.08;
  ProbabilisticObjectMaps.image_border = 15.0 * 0.08;
  ProbabilisticObjectMaps.min_sdf_value = -10.0 * 0.08;
  ProbabilisticObjectMaps.max_sdf_value = 10.0 * 0.08;
  ProbabilisticObjectMaps.min_sdf_weight = 0.2;
  ProbabilisticObjectMaps.max_sdf_weight = 0.7;
  ProbabilisticObjectMaps.min_sdf_inference_weight = 0.4;
  ProbabilisticObjectMaps.generate_sdf = false;
  ProbabilisticObjectMaps.sdf_mistrust_weight = 1.0;
  ProbabilisticObjectMaps.matching_angular_resolution = deg2rad(6.0);
  ProbabilisticObjectMaps.matching_delta_loc = 1.0;
  ProbabilisticObjectMaps.matching_loc_resolution = 0.2;
  ProbabilisticObjectMaps.max_clique_kld_value = 5.0;
  ProbabilisticObjectMaps.min_clique_overlap_value = 0.55;
  ProbabilisticObjectMaps.max_num_objects = 20;
  ProbabilisticObjectMaps.epsilon_occupancy = 0.05;
  ProbabilisticObjectMaps.occupancy_threshold = 0.3;
  ProbabilisticObjectMaps.good_match_threshold = 0.7;

elseif enml_domain == "orebro" then
  -- datasets/orebro/logs/*.bag
  NonMarkovLocalization.starting_location = vec2(0.0, 0.0);
  NonMarkovLocalization.starting_angle = deg2rad(-5.0);
  NonMarkovLocalization.map_name = "orebro";


  -- Parameters for LTF constraints.
  NonMarkovLocalization.map_huber_loss = 0.05;
  NonMarkovLocalization.max_point_to_line_distance = 0.15;
  NonMarkovLocalization.max_angle_error = deg2rad(25.0);
  NonMarkovLocalization.map_correlation_factor = 1.0 / 100.0;

  -- Parameters for STF constraints.
  NonMarkovLocalization.point_match_threshold = 0.05;
  NonMarkovLocalization.max_stf_angle_error = deg2rad(89.0);
  NonMarkovLocalization.max_correspondences_per_point = 2;
  NonMarkovLocalization.point_correlation_factor = 1.0 / 50.0;

  NonMarkovLocalization.use_visibility_constraints = false;
  visibility_correlation_factor = 0.002;

  -- Odometry Parameters
  NonMarkovLocalization.max_odometry_delta_loc = 10.0;
  NonMarkovLocalization.max_odometry_delta_angle = deg2rad(170.0);
  NonMarkovLocalization.min_rotation = -1;
  NonMarkovLocalization.min_translation = -1;
  NonMarkovLocalization.odometry_radial_stddev_rate = 180.0;
  NonMarkovLocalization.odometry_tangential_stddev_rate = 180.0;
  NonMarkovLocalization.odometry_angular_stddev_rate = 180.0;
  NonMarkovLocalization.odometry_translation_min_stddev = 0.01;
  NonMarkovLocalization.odometry_translation_max_stddev = 1000000.5;
  NonMarkovLocalization.odometry_rotation_min_stddev = deg2rad(1000.0);
  NonMarkovLocalization.odometry_rotation_max_stddev = deg2rad(50000000.0);
  NonMarkovLocalization.max_odometry_delta_loc = 1.2;
  NonMarkovLocalization.max_odometry_delta_angle = deg2rad(180.0);

  -- CoBot Sensor parameters.
  NonMarkovLocalization.laser_std_dev = 0.1;
  NonMarkovLocalization.min_point_cloud_range = 0.1;
  NonMarkovLocalization.max_point_cloud_range = 40.0;
  NonMarkovLocalization.max_normal_point_distance = 0.2;
  NonMarkovLocalization.robot_laser_offset = vec2(0.0, 0.0);

  -- MLE Optimization parameters.
  NonMarkovLocalization.pose_increment = 10;
  NonMarkovLocalization.max_solver_iterations = 20;
  NonMarkovLocalization.min_episode_length = 20;
  NonMarkovLocalization.max_history = 120;
  NonMarkovLocalization.num_repeat_iterations = 4;
  NonMarkovLocalization.max_repeat_iterations = 20;
end
